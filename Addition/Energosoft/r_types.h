// r_types.h
// Описания типов, используемых в алгоритмах расчёта расхода

#ifndef _R_TYPES_H
#define _R_TYPES_H

// -------------------------------------------------------------------
// Пакет входных данных, общий для всех сред и всех сужающих устройств
// -------------------------------------------------------------------
struct TENTRY_DATA
{
	double d;			// Диаметр трубопровода, мм
    double dsu;			// Диаметр сужающего устройства, мм
    int mat;			// Материал трубопровода (см. r_const.h)
    int mat_su;			// Материал сужающего устройства (см. r_const.h)
    double roug;		// Абс. шероховатость, мм
    double rad;			// Радиус скругления кромки
    int type_su;		// Тип сужающего устройства (ЕСЛИ type_su=su_vcorrector, ТО ПРОИЗВОДИТСЯ КОРРЕКЦИЯ РАСХОДА)
    double interval;	// Межповерочный интервал, лет
    double dp;			// Перепад давления или нескорректированный расход (если type_su=su_vcorrector)
    int dp_units;		// Ед.изм. перепада или нескорректированного расхода (см. r_const.h)
    double p;			// Давление
    int p_units;		// Ед.изм. давления (см. r_const.h)
    //bool p_is_abs;		// Признак того, что P - абсолютное давление
    double t;			// Температура
    int t_units;		// Ед. изм. температуры (см. r_const.h)

    int r_units;		// Ед.изм. расхода (см. r_const.h)
    double pb;			// Барометрическое давление
    int pb_units;		// Ед. изм. барометрического давления (см. r_const.h)

    double fi;			// Влажность (только для газов), %
};


// ---------------------------------------------------------------------
// Пакет промежуточных данных, расчитываемых на основе входных данных
// Данный пакет поступает на вход алгоритма вместе с пакетом TENTRY_DATA
// ---------------------------------------------------------------------
struct TPREP_DATA
{
	double dtp;		// Фактический диаметр трубопровода, мм
    double dsu;		// Фактический диаметр СУ, мм
    double dpabs;	// Перепад давления, кПа
    double pabs;	// Абсолютное давление, МПа
    double tabs;	// Абсолютная температура, К
    double m2;		// Относительный диаметр СУ
    double m_spec;	// Модуль СУ (только для специальных СУ)
    double w;		// Коэффициент скорости входа
    double cqu;		// Коэффициент истечения (после вызова PrepareData в поле содержится предварительное значение)
					// Процедура расчета расхода заносит в поле окончательное значение
    double rkpk;	// Средний радиус скругления за межповерочный интервал, мм
    double kpk;		// Коэффициент притупления кромки СУ
};

// -------------------------
// Физические свойства среды
// -------------------------
struct TPHYSIC_PROP
{
	double rnom;	// Плотность в нормальных условиях, кг/м3
	double rpt;		// Плотность в рабочих условиях, кг/м3
	
	double rcg;		// Плотность сухой части газа в рабочих условиях (только для влажных газов), кг/м3
	double rwg;		// Плотность влажной части газа в рабочих условиях (только для влажных газов), кг/м3

    double ksj;		// Коэффициент сжимаемости
    double mu;		// Вязкость, Па*с
    double xi;		// Показатель адиабаты
	int aggr;		// Агрегатное состояние среды (NEW !!!)	
};


// ----------------------------------------------------
// Результаты расчёта расхода и связанных с ним величин
// ----------------------------------------------------
struct TCALC_RES
{
    double r;			// Расход за секунду
    int r_units;		// Единицы измерения расхода (см. r_const.h)
    double eps;			// Коэффициент расширения газа (зависит от параметров СУ)
    //double rpt;			// Плотность в рабочих условиях
};

// ---------------
// Данные по среде
// ---------------
struct TSUBST_DATA
{
    int module;			// Расчётный модуль
    int gas_alg;		// Алгоритм расчёта (только для природного газа)
    double rnom;		// Плотность, кг/м3 (необходима для неполного состава)
    double sCH4;		// 1.метан
    double sC2H6;		// 2.этан
    double sC3H8;		// 3.пропан
    double sC4H10;		// 4.н-бутан
    double sIC4H10;		// 5.и-бутан
    double sN2;			// 6.азот
    double sCO2;		// 7.двуокись углерода
    double sH2S;		// 8.сероводород
    double sC5H12;		// 9.н-пентан
    double sIC5H12;		// 10.и-пентан
    double sC6H14;		// 11.гексан
    double sC7H16;		// 12.гептан
    double sC8H18;		// 13.октан
    double sC3H6;		// 14.пропилен
    double sO2;			// 15.кислород
    double sCO;			// 16.окись углерода
    double sH2;			// 17.водород
    double sCnHm;		// 18.углеводородный остаток

    //bool MolarProc;		// Если True - значит состав в молярных %, иначе - в объёмных
	
	int cmp_units;		// Единицы измерения компонентного состава (пока допустимы значения: u_molproc или u_vproc) NEW!!!
};

#endif