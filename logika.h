#define EXPORT extern "C" __declspec (dllexport)
//----------------------------------------------------------------------------------------------------------
//#define DEVICE_NUM_MAX	3
#define TAGS_NUM_MAX	55
#define ARCHIVE_NUM_MAX 180	// максимальное количество элементов архива
//----------------------------------------------------------------------------------------------------------
#define MAX_LOGIKS_NUM		3		// maximum number of logiks
#define MAX_LOGIKS_PARAM	45		// maximum number of parametrs on one controller
#define PORTNAME_LEN 15				// port name lenght
#define PORT_NUM_MAX 10				// maximum number of ports	
#define MAX_PIPE_NUMS 4				// максимальное число труб.каналов на логике
//-----------------------------------------------------------------------------
typedef struct _AnsLog AnsLog;
struct _AnsLog { 
  BOOL  checksym;	// Контрольная сумма, (TRUE в порядке, FALSE плохая)
  BYTE  from;		// Адрес источника данных (Логики)
  BYTE  to;			// Адрес приемника данных (Контроллера)
  BYTE  func;		// функция-ответа  FNC=03h FNC=7Fh FNC=7Fh FNC=16h
  CHAR  head[80];	// заголовок ответа (нахуй не нужен по-большому счету)
  BYTE  pipe;		// номер канала-трубы
  BYTE  npAdr;		// номер параметра или массива

  BYTE  from_param;	// [для индексных запросов] с какого параметра читается
  BYTE  quant_param;// [для индексных запросов] количество элементов

  CHAR  data [ARCHIVE_NUM_MAX][28];	// [для всех запросов на чтение] значения параметров
  CHAR  type [ARCHIVE_NUM_MAX][28];	// [для всех запросов на чтение] еденицы измерения
  CHAR  time [ARCHIVE_NUM_MAX][28];	// [для всех запросов на чтение] метка времени
};
//-----------------------------------------------------------------------------
#define FF  0xC	  // form feed
#define SOH 0x01  // начало заголовка,
#define ISI 0x1F  // указатель кода функции FNC,
#define STX 0x02  // начало тела сообщения,
#define ETX 0x03  // конец тела сообщения.
#define DLE 0x10  // символ-префикс.
#define HT  0x09  // код горизонтальной табуляции

#define FNC_read		1Dh // Чтение параметров
#define FNC_write		03h // Запись параметра
#define FNC_ptzp		7Fh // Подтверждение записи
#define FNC_readindex	0Ch // Чтение элементов индексного массива
#define FNC_answer		14h // Заголовок ответа на на чтение индексов
//-----------------------------------------------------------------------------
typedef struct _Archive Archive;
struct _Archive {
  SHORT	adr;		// адрес в пространстве Логики 
  CHAR	name[50];	// текстовое название параметра
  SHORT	quant;		// максимальное количество элементов
  SHORT	type;		// тип элемента (0-часовой, 1-суточный, 2-декадный, 3-по месяцам, 4-сменный)
  CHAR	meas[15];	// текстовое название еденицы измерения
  SHORT numCH;		// номеротип канала
};
//-----------------------------------------------------------------------------
// 0 - мгновенные данные
// 1 - часовые данные
// 2 - суточные данные
// 3 - декадные данные
// 4 - данные по месяцам
// 5 - сменные данные
// 6 - часовые счетчик плавающий
// 7 - суточные счетчик плавающий
// 10 - перерывы электропитания
// 11 - нештатные ситуации
//-----------------------------------------------------------------------------
Archive Archive761[] =
 {	{154,"Измеренное значение давления",1,0,"МПа",1},
	{156,"Измеренное значение температуры газа",1,0,"С",2},
	{151,"Объемный расход газа при РУ",1,0,"м3/ч",3},
	{159,"Объемный расход газа",1,0,"м3/ч",4},
	
	//{130,"Первая уставка по расходу",3,0,"м3/ч",4},
	//{131,"Вторая уставка по расходу",3,0,"м3/ч",4},
	//{133,"Первая уставка по давлению",3,0,"МПа",1},
	//{134,"Вторая уставка по давлению",3,0,"МПа",1},
	//{135,"Первая уставка по температуре",3,0,"С",2},
	//{136,"Вторая уставка по температуре",3,0,"С",2},
	
	{200,"Архив часовой значений температуры газа", 960, 1, "С",2},
	{201,"Архив суточный значений температуры газа", 365, 2, "С",2},
	{202,"Архив декадный значений температуры газа", 72, 3, "С",2},
	{203,"Архив по месяцам значений температуры газа", 24, 4, "С",2},

	{205,"Архив часовой значений давления газа", 960, 1, "МПа",1},
	{206,"Архив суточный значений давления газа", 365, 2, "МПа",1},
	{207,"Архив декадный значений давления газа", 72, 3, "МПа",1},
	{208,"Архив по месяцам значений давления газа", 24, 4, "МПа",1},

	{210,"Архив часовой значений объема трансп. газа", 960, 1, "т.м3",4},
	{211,"Архив суточный значений объема трансп. газа", 365, 2, "т.м3",4},
	{212,"Архив декадный значений объема трансп. газа", 72, 3, "т.м3",4},
	{213,"Архив по месяцам значений объема трансп. газа", 24, 4, "т.м3",4},
	{213,"Архив сменный значений объема трансп. газа", 400, 5, "т.м3",4},

	{220,"Архив часовой значений массы трансп. газа", 960, 1, "кг",3},
	{221,"Архив суточный значений массы трансп. газа", 365, 2, "кг",3},
	{222,"Архив декадный значений массы трансп. газа", 72, 3, "кг",3},
	{223,"Архив по месяцам значений массы трансп. газа", 24, 4, "кг",3},
	{224,"Архив сменный значений массы трансп. газа", 400, 5, "кг",3},
	
	{358,"Объем газа при с.у. по потребителю", 1, 0, "м3",24},

	{ 97,"Архив времени перерывов электропитания", 400, 11, "ч.",11},
	{ 98,"Архив нештатных ситуаций вл. на к.учет", 400, 12, "",12}};

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
typedef struct _APC79 APC79;
struct _APC79 {  
  CHAR	spec[12];		// Спецификация внешнего оборудования. peslraahhv.
  CHAR	version[15];	// Версия адаптера.
  UCHAR	period;			// Периодичность опроса
};
APC79 apc;
//-----------------------------------------------------------------------------
